<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Robin Lee</title>
    <link>https://robin-lee.github.io/tags/development/</link>
    <description>Recent content in Development on Robin Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 27 Jul 2016 14:31:03 +0200</lastBuildDate>
    
	<atom:link href="https://robin-lee.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Growing Object Oriented Software, Guided by Tests Part 1</title>
      <link>https://robin-lee.github.io/blog/goosgbt-1/</link>
      <pubDate>Wed, 27 Jul 2016 14:31:03 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/goosgbt-1/</guid>
      <description>In this series, I consolidate points from the GOOSGBT book and may comment on some of them. The post may not be coherent as I am extracting fragments I consider useful or enlightening.
Stackoverflow post to read: link
Levels of testing  Acceptance: Does the whole system work? Integration: Does our code work against code we can&amp;rsquo;t change? Unit: Do our objects do the right thing, are they convenient to work with?</description>
    </item>
    
    <item>
      <title>Gradle and gradle init</title>
      <link>https://robin-lee.github.io/blog/gradle-init/</link>
      <pubDate>Wed, 27 Jul 2016 10:56:29 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/gradle-init/</guid>
      <description>What is gradle? Gradle is an open source build automation system that builds upon the concepts of Apache Ant and Apache Maven and introduces a Groovy-based domain-specific language (DSL) instead of the XML form used by Apache Maven of declaring the project configuration. (wikipedia)
Here are more build tools from a stackoverflow post linked later:
 Apache Ant &amp;amp; Apache Maven - Java sbt (Simple Build Tool) - for Scala A-A-P - Python based build tool Rake (Apache Builder) - Ruby Leiningen for Clojure  There is gulpjs and gruntjs for Javascript too.</description>
    </item>
    
    <item>
      <title>Agile Software Development</title>
      <link>https://robin-lee.github.io/blog/agile/</link>
      <pubDate>Sat, 23 Jul 2016 16:29:59 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/agile/</guid>
      <description>What is Agile Software Development? It refers to adopting a set of practices or principles while developing software.
 In early 2001, the Agile Alliance met to outine the values and principles that would allow software teams work together and respond to change.
 Agile Software Development, Principles, Patterns and Practices.
Things that got my attention 1.
 Agiles processes promote sustainable development. The sponsors, developers and users should be able to maintain constant pace indefinitely.</description>
    </item>
    
    <item>
      <title>SOLID Principles</title>
      <link>https://robin-lee.github.io/blog/solid/</link>
      <pubDate>Sat, 23 Jul 2016 14:46:47 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/solid/</guid>
      <description>A set of principles to design or write classes.
Single Responsibility Principle  A class should have one, and only one, reason to change.
 Open - Closed Principle  You should be able to extend a classes behavior, without modifying it.
 Liskov Substitution Principle  Derived classes must be substitutable for their base classes.
 Interface Segregation Principle  Make fine grained interfaces that are client specific.</description>
    </item>
    
  </channel>
</rss>