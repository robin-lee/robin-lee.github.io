<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robin Lee</title>
    <link>https://robin-lee.github.io/</link>
    <description>Recent content on Robin Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Jul 2016 22:10:37 +0200</lastBuildDate>
    <atom:link href="https://robin-lee.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Uncle Bob Said</title>
      <link>https://robin-lee.github.io/blog/uncle-bob-said/</link>
      <pubDate>Sun, 24 Jul 2016 22:10:37 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/uncle-bob-said/</guid>
      <description>

&lt;h1 id=&#34;inspirational-quotes&#34;&gt;Inspirational quotes&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You dont go fast by writing crap”&lt;/p&gt;

&lt;p&gt;&amp;ldquo;You want to go fast, you do a good job”&lt;/p&gt;

&lt;p&gt;“Move deliberately, instead of rapidly&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Agile Software Development</title>
      <link>https://robin-lee.github.io/blog/agile-software-development/</link>
      <pubDate>Sat, 23 Jul 2016 16:29:59 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/agile-software-development/</guid>
      <description>

&lt;h1 id=&#34;what-is-agile-software-development&#34;&gt;What is Agile Software Development?&lt;/h1&gt;

&lt;p&gt;It refers to adopting a set of practices or principles while developing software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In early 2001, the Agile Alliance met to outine the values and principles that would allow software teams work together and respond to change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Agile Software Development, Principles, Patterns and Practices.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;things-that-got-my-attention&#34;&gt;Things that got my attention&lt;/h1&gt;

&lt;p&gt;1.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agiles processes promote sustainable development. The sponsors, developers and users should be able to maintain constant pace indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An agile project is not run like a 50-yard dash; it is run like a marathon. They run at a fast, sustainable pace. Running too fast often leads to burnout, shortcuts and debacle. &amp;hellip; A team is not allowed to work overtime. The only exception is the last week in a release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Splitting, Spiking and Velocity. Any story too big should be split in stories that aren&amp;rsquo;t too big. After splitting, it should be reestiamted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Velocity is something like &amp;ldquo;2 days per story point&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-&amp;gt; Users can securely transfer money into, out of, and between their accounts.

becomes

-&amp;gt; Users can login
-&amp;gt; Users can logout
-&amp;gt; Users can deposit money into their account
-&amp;gt; Users can withdraw money from their account
-&amp;gt; Users can transfer money from their account to another account
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Intentional programming. You state your intent in a test before implementing it, making your intent as simple and readable as possible. The act of writing tests first is an act of discerning between design decisions. WumpusGame example: Integers instead of room object or game world?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;White box test: A test that knows and depends on its internal structure. (unit)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Black box test: A test that does&lt;/em&gt; &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;know or depend on its internal structure. (acceptance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Always practice refactoring for every module you write and every module you maintain.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>SOLID Principles</title>
      <link>https://robin-lee.github.io/blog/solid-principles/</link>
      <pubDate>Sat, 23 Jul 2016 14:46:47 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/solid-principles/</guid>
      <description>

&lt;p&gt;A set of principles to design or write &lt;strong&gt;classes&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;single-responsibility-principle&#34;&gt;Single Responsibility Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A class should have one, and only one, reason to change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;open-closed-principle&#34;&gt;Open - Closed Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;You should be able to extend a classes behavior, without modifying it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;liskov-substitution-principle&#34;&gt;Liskov Substitution Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Derived classes must be substitutable for their base classes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;interface-segregation-principle&#34;&gt;Interface Segregation Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Make fine grained interfaces that are client specific.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;dependency-inversion-principle&#34;&gt;Dependency Inversion Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Depend on abstractions, not on concretions.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Gson Custom Deserializer</title>
      <link>https://robin-lee.github.io/blog/gson-custom-deserializer/</link>
      <pubDate>Tue, 12 Jul 2016 21:51:16 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/gson-custom-deserializer/</guid>
      <description>&lt;p&gt;When you develop an application, usually you will have to consume an API Service which might return some JSON data.
You might not need all values from the JSON data.&lt;/p&gt;

&lt;p&gt;The question is how do you process such data the &lt;em&gt;right&lt;/em&gt; way?&lt;/p&gt;

&lt;p&gt;Typically, you will retrieve the data using a HTTP client and then pass it on to a Object Relational Mapper.
In my experience APIs return data based on models crafted for the database, however, for client side applications the model
you design might be different from what the API returns you (due to application needs/ease of development). Hence, you need to extract part of it, transform it or map it differently.&lt;/p&gt;

&lt;p&gt;If you happen to use GSON and retrofit 2&amp;hellip; Perhaps this example will help you.&lt;/p&gt;

&lt;p&gt;Sample json data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;date&amp;quot;: &amp;quot;2016-01-01T21:23:00&amp;quot;,
  &amp;quot;places&amp;quot;: [
    {
      &amp;quot;id&amp;quot;: 1,
      &amp;quot;amount&amp;quot;: 25
    },
    {
      &amp;quot;id&amp;quot;: 2,
      &amp;quot;amount&amp;quot;: 59
    },
    {
      &amp;quot;id&amp;quot;: 3,
      &amp;quot;amount&amp;quot;: 28
    },
    {
      &amp;quot;id&amp;quot;: 4,
      &amp;quot;amount&amp;quot;: 11
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets say you just want the &amp;ldquo;list&amp;rdquo; of places.&lt;/p&gt;

&lt;p&gt;First define a model for each &amp;ldquo;Place&amp;rdquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
private int id;
private int amount;

//Constructors, getters and setters
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Define a custom deserializer for GSON with a main method for testing (or you could setup JUnit).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CustomPlaceDeserializer&amp;lt;T&amp;gt; implements JsonDeserializer&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; {

    public List&amp;lt;T&amp;gt; deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext context)
            throws JsonParseException {

        JsonElement results = jsonElement.getAsJsonObject().get(&amp;quot;places&amp;quot;);

        return new Gson().fromJson(results, type);
    }

    public static void main(String[] args) throws Exception {

        //

        // Configure Gson
        GsonBuilder gsonBuilder = new GsonBuilder();
        Type listType = new TypeToken&amp;lt;ArrayList&amp;lt;Place&amp;gt;&amp;gt;(){}.getType();
        gsonBuilder.registerTypeAdapter(listType, new CustomPlaceDeserializer&amp;lt;Place&amp;gt;());
        Gson gson = gsonBuilder.create();

        // The JSON data
        String jsonstring = &amp;quot;replace this with sample json string&amp;quot;;

        // Parse JSON to Java
        List&amp;lt;Place&amp;gt; places = gson.fromJson(jsonstring, listType);
        System.out.println(places.size());
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are using retrofit 2, it might look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Gson customGson =
        new GsonBuilder()
                .registerTypeAdapter(listType, new CustomPlaceDeserializer&amp;lt;Place&amp;gt;())
                .create();
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://robin-lee.github.io/about/</link>
      <pubDate>Sun, 10 Jul 2016 15:04:30 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/about/</guid>
      <description>&lt;p&gt;Robin is an undergraduate at SUTD.&lt;/p&gt;

&lt;p&gt;He likes reading epic fantasy, translated light novels and trying new technologies*.&lt;/p&gt;

&lt;p&gt;Here he writes about his adventures with random things as well as shares his thoughts on various topics.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://robin-lee.github.io/blog/hello-world/</link>
      <pubDate>Sun, 10 Jul 2016 14:29:34 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/hello-world/</guid>
      <description>&lt;p&gt;Whoopee! Hugo, with the cocoa theme!&lt;/p&gt;

&lt;p&gt;Furthermore, some old posts have been shifted over from pelican!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Check out how to use hugo here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virtual Box Shared Folder</title>
      <link>https://robin-lee.github.io/blog/virtual-box-shared-folder/</link>
      <pubDate>Sat, 06 Feb 2016 21:41:18 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/virtual-box-shared-folder/</guid>
      <description>&lt;p&gt;For some projects I need to share files between my virtual machine and my host machine. VirtualBox allows for shared folders between the VM and the host after install Guest Additions. However, there is always a bit of configuration involved.&lt;/p&gt;

&lt;p&gt;I installed Ubuntu 14.04 LTS and then installed Guest Additions. After I added a shared folder in the settings, I discovered that I did not have permission to access the folder. According to VirtualBox&amp;rsquo;s &lt;a href=&#34;https://www.virtualbox.org/manual/ch04.html#sf_mount_auto&#34;&gt;documentation&lt;/a&gt; you need to add guest users to the vboxsf group. I tend to forget the command to do so as I do not need to change user properties frequency.&lt;/p&gt;

&lt;p&gt;If you happen to need the command here it is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language-bash&#34;&gt;sudo usermod -aG vboxsf &amp;lt;your username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Forcing Display Edid</title>
      <link>https://robin-lee.github.io/blog/forcing-display-edid/</link>
      <pubDate>Fri, 05 Feb 2016 22:02:00 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/forcing-display-edid/</guid>
      <description>&lt;p&gt;I bought a 2 port VGA Switcher off Taobao so that I could switch my main display between my desktop and laptop. However, when I connected my Macbook through the VGA adapter to the VGA Switcher my screen was not appearing correctly. It was shifted off screen to the right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://robin-lee.github.io/images/mtviki-vga-switch.jpg&#34; alt=&#34;VGA Switcher&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is the 2 port VGA Switcher I bought off Taobao. It is a nice compact device with tacty buttons you can press to switch the the video input.&lt;/p&gt;

&lt;p&gt;If I connect it up like Macbook - VGA Adapter - VGA Cable - Display, it works fine. However, the setup I need is Macbook - VGA Adapter - VGA Cable - VGA Switcher - Display. When connected up in this manner, the output from my Macbook is cutoff and shifted to the right. Faced with this problem I contemplated getting another KVM Switch that is known to work with Macbooks.&lt;/p&gt;

&lt;p&gt;Knowing that it would still take at least 2-3 weeks to get a KVM Switch purchased from Amazon to my doorstep, I looked for software or configuration based solutions. The SwitchResX plugin was able to get the full HD resolution to show but that produced the cutoff issue. Smaller resolutions from 1400x1050 downwards was working fine but it wasn&amp;rsquo;t HDPI and it is such a waste for a 23 inch screen.&lt;/p&gt;

&lt;p&gt;I observed that the display was being detected as a generic VGA/SVGA display with Vendor as &amp;ldquo;unkn - 756E6B6E&amp;rdquo; and Product as &amp;ldquo;717&amp;rdquo;. So I made a guess that my laptop was unable to tell what device we are being hooked up to through the VGA cable. When it comes to identifying something we usually do it through IDs. There had to be some file or ID that could be spoofed right?&lt;/p&gt;

&lt;p&gt;After Googling a bit it seems like other people have had the similar problems. There were a number of threads where people indicated failure in producing the right output on an external display connected to their Macbook. Changing some files relating to EDID solved their problem. According to wikipedia: &lt;code&gt;Extended display identification data (EDID) is a data structure provided by a digital display to describe its capabilities to a video source (e.g. graphics card or set-top box). It is what enables a modern personal computer to know what kinds of monitors are connected to it.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Going to the folder &lt;code&gt;/DisplayVendorID-756e6b6e&lt;/code&gt;, I had to replace &lt;code&gt;DisplayProductID-717&lt;/code&gt; with a customized configuration.
It is better explained &lt;a href=&#34;http://www.insanelymac.com/forum/topic/208410-fixing-scrambledstretched-or-wrong-resolution-laptop-display-problems/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Regex</title>
      <link>https://robin-lee.github.io/blog/learning-regex/</link>
      <pubDate>Tue, 15 Sep 2015 23:21:45 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/learning-regex/</guid>
      <description>&lt;p&gt;I think regular expressions are essential when it comes to extracting data from a source.&lt;/p&gt;

&lt;p&gt;For example if you wanted the names of all the files in a folder without the extensio, using a regular expression could make the process easier and code more concise.&lt;/p&gt;

&lt;p&gt;The difficulty is finding the material to practice on even with a cheatsheet for regex.&lt;/p&gt;

&lt;p&gt;I found this site called &lt;a href=&#34;http://regexone.com/&#34;&gt;regexone&lt;/a&gt; and I felt the tutorial reflected certain real life situations. Not only did it teach me about the symbols it did so by sharing real life examples(where you might use a regular expression). Such as for checking for email validity or telephone number validity. Do check it out!&lt;/p&gt;

&lt;p&gt;When crafting a regular expression for use you will definitely need to test it first, so here is an online tool you might want to use: &lt;a href=&#34;https://regex101.com/&#34;&gt;regex101&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Brief recap of what I went through&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;(hat) the hat character can be used to exclude or declare the start of a regular expression.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[abc]&lt;/code&gt; square brackets mean that it is a character set. In this case only a,b, or c are valid.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[^abc]&lt;/code&gt; this &lt;em&gt;inverts&lt;/em&gt; the logic in the previous point. Not a, b, nor c. Exclude a, b, and c.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[a-z]|[0-9]&lt;/code&gt; a to z or 0-9.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; end of regular expression&lt;/li&gt;
&lt;li&gt;&lt;code&gt;()&lt;/code&gt; capture group, can be nested. Jan 1988. &lt;code&gt;(\w+\s(\d+))&lt;/code&gt; gives &lt;code&gt;Jan 1988&lt;/code&gt; &lt;code&gt;1988&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; means any character. &lt;code&gt;\.&lt;/code&gt; with backslash means period.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; means ONE or many repetitions. &lt;code&gt;*&lt;/code&gt; ZERO or many repetitions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\s&lt;/code&gt; any white space character &lt;code&gt;\t&lt;/code&gt;, , &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n}&lt;/code&gt;, &lt;code&gt;{a,b}&lt;/code&gt;. n repetitions. a to b repetitions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w&lt;/code&gt; means &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; means [0-9]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab?c&lt;/code&gt; means b is an optional. &lt;code&gt;abc&lt;/code&gt; and &lt;code&gt;ac&lt;/code&gt; are valid.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w+\b&lt;/code&gt; is useful for getting entire words. boundary between word and non-word character.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\W+$&lt;/code&gt; would match any non-alphanumeric character up to the end of the line. Eg. &lt;code&gt;&amp;amp;$#*@!.&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>