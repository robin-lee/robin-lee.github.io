<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robin Lee</title>
    <link>https://robin-lee.github.io/</link>
    <description>Recent content on Robin Lee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Aug 2016 15:33:28 +0200</lastBuildDate>
    <atom:link href="https://robin-lee.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cpp Basics 1</title>
      <link>https://robin-lee.github.io/blog/2016/08/cpp-basics-1/</link>
      <pubDate>Fri, 19 Aug 2016 15:33:28 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/08/cpp-basics-1/</guid>
      <description>

&lt;p&gt;Algorithms and data structures are a central part of software development. I thought it would be reinforce the knowledge I have in this area.
Competitions in this domain seem to favor cpp and knowing a variant of c better will certainly help when doing &lt;em&gt;hardware programming&lt;/em&gt;. Hence, we eplore the
basics of cpp before we move on to data structures and then algorithms.&lt;/p&gt;

&lt;p&gt;A series in cpp begins. Naturally, it involves more than just language.&lt;/p&gt;

&lt;p&gt;Reference: Accelerated C++
Note: This post is written largely in the context of using OSX (my laptop).&lt;/p&gt;

&lt;h2 id=&#34;a-program&#34;&gt;A program&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;

int main() {
    {
        const std::string s = &amp;quot;Hot chocolate is nice.&amp;quot;;
        std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl;
    }
    {
        const std::string s = &amp;quot;COOP iced tea is nice!&amp;quot;;
        std::cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std::endl;
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A basic program might look like something above. &lt;code&gt;#include&lt;/code&gt; libraries and send something to the output.&lt;/p&gt;

&lt;p&gt;Things to note here would be:
- &lt;code&gt;std&lt;/code&gt; namespace is used explicitly.
- The first &lt;code&gt;::&lt;/code&gt; used may be called the scope operator.
- &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; and its partner &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; are &lt;em&gt;redirection&lt;/em&gt; operators.
- &lt;code&gt;{ }&lt;/code&gt; brackets create scopes. You may consider them as &lt;em&gt;units&lt;/em&gt;. The program runs here because there 2 units and they only access the variables within them.
- &lt;code&gt;return 0&lt;/code&gt;: 0 return value implies the program executed fine. Any other return value means an error..&lt;/p&gt;

&lt;h2 id=&#34;makefile&#34;&gt;Makefile&lt;/h2&gt;

&lt;p&gt;To run a program coded in cpp, you need to first compile the cpp code and then execute the resulting executable file.
It can get quite repetive. To make things simpler it useful to have a script to automate the &lt;em&gt;build&lt;/em&gt; process. Creating a Makefile for the &lt;code&gt;make&lt;/code&gt; tool is one
way you can achieve such automation. Some call it a &lt;a href=&#34;https://www.cs.umd.edu/class/fall2002/cmsc214/Tutorial/makefile.html&#34;&gt;Macro&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;run: compile
        ./play

compile:
        g++ play.cpp -o play
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default the tool &lt;code&gt;make&lt;/code&gt; process the first target. By convention, the first target is called &lt;code&gt;all&lt;/code&gt; (we are not following that here to be clear on how make works).
The questions that arise now are: What is the format of a make file? What is target?&lt;/p&gt;

&lt;p&gt;A makefile has a format like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;target: dependencies
[tab character] system command
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another way you can specify the default target is &lt;a href=&#34;http://stackoverflow.com/a/30176470&#34;&gt;link&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;.DEFAULT_GOAL := mytarget
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a newer make &amp;gt; 3.80:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;.PHONY: default
default: mytarget ;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gcc-vs-g&#34;&gt;gcc vs g++&lt;/h2&gt;

&lt;p&gt;You could just do &lt;code&gt;make&lt;/code&gt; in the same directory as your cpp code. An output file will be created which you can execute like &lt;code&gt;./the_output_file.out&lt;/code&gt;.
What I &lt;strong&gt;&lt;em&gt;think&lt;/em&gt;&lt;/strong&gt; happens is that &lt;code&gt;make&lt;/code&gt; gets the default compiler for the cpp code. For OSX, in my case, it &lt;em&gt;should&lt;/em&gt; be gcc.&lt;/p&gt;

&lt;p&gt;Anyway, whats important to know here is the difference between g++ and gcc as above we specified g++.&lt;/p&gt;

&lt;p&gt;Quoting a stackoverflow &lt;a href=&#34;http://stackoverflow.com/a/173007&#34;&gt;post&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The main differences:

1. gcc will compile: *.c/*.cpp files as C and C++ respectively.
2. g++ will compile: *.c/*.cpp files but they will all be treated as C++ files.
3. Also if you use g++ to link the object files it automatically links in the std C++ libraries (gcc does not do this).
4. gcc compiling C files has less predefined macros.
5. gcc compiling *.cpp and g++ compiling *.c/*.cpp files has a few extra macros.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Knowing the difference might just help you when you have one of those projects involving sensors or microcontrollers!&lt;/p&gt;

&lt;p&gt;##C++ Strings&lt;/p&gt;

&lt;p&gt;Frankly, at the moment I still do not understand enough about between strings and string literals. Being pragmatic,
I will look at some practical use cases.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;string&amp;gt;
using std::string;

string stringLiteral = &amp;quot;characters enclose in double quotes and cannot span lines&amp;quot;;

//overloaded constructor to create a string with n of character.
string repeatCharacter z(10, &#39;*&#39;);

//a string
string someString = string(&amp;quot;i am a string&amp;quot;);

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A &lt;strong&gt;string literal&lt;/strong&gt; is a bunch of characters in doubles and they cannot span lines. Having some prior knowledge in C and C++, I would say that a string literal is &lt;em&gt;a series of characters in memory terminated by a null character &lt;code&gt;\0&lt;/code&gt;&lt;/em&gt;. Maybe it would be better to call them character literal arrays.&lt;/p&gt;

&lt;p&gt;As for a &lt;strong&gt;string&lt;/strong&gt;, you use a contructor &lt;code&gt;string(&amp;quot;some text&amp;quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A common use case with strings is to join them just like creating a sentence where you want to join words or phrases together.
This is where you can see a difference (&lt;a href=&#34;http://stackoverflow.com/questions/662918/how-do-i-concatenate-multiple-c-strings-on-one-line&#34;&gt;refence link&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;string stringLiteral1 = &amp;quot;hello&amp;quot;;
string stringLiteral2 = &amp;quot; world&amp;quot;;

//you cannot do because they are both string literals.
string s = stringLiteral1 + stringLiteral2;

//(A)convert them to strings
string newstring = string(stringLiteral1) + string(stringLiteral2);

//(B)or perhaps
std::stringstream ss;
ss &amp;lt;&amp;lt; &amp;quot;Hello, world, &amp;quot; &amp;lt;&amp;lt; myInt &amp;lt;&amp;lt; niceToSeeYouString;
std::string s = ss.str();

//(C)or using append; a little verbose?.
std::string s;
s.append(&amp;quot;Hello world, &amp;quot;);
s.append(&amp;quot;nice to see you, &amp;quot;);
s.append(&amp;quot;or not.&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At a glance, I think I would prefer using method (A) or (B) to create dynamic strings. In a game prototype, NPCs could
have a lengthly paragraph text to say depending on a player&amp;rsquo;s actions. What if there really was a lot to output because the NPC
is such a great storyteller?&lt;/p&gt;

&lt;p&gt;string::size_type could be useful if you have &amp;gt; 32767 characters. The book says that it is good practice to use size_type for the
size of strings since it was created for the purpose of &lt;em&gt;sizing&lt;/em&gt; strings.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// size_type used intead of int
const std::string::size_type cols = greeting.size() + pad * 2 + 2;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last point for this post is off-topic from strings but it is relevant to cpp&amp;hellip;
Quoting the book:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;One reason to count from 0 is that doing so encourages us to use asymmetric ranges to express intervals. For example, it is natural to use the range [0, rows) to describe the first for statement, as it is to use the range [1, rows] to describe the second one.
Asymmetric ranges are usually easier to use than symmetric ones because of an important property: A range of the form [m, n) has n - m elements, and a range of the form [m, n] has n - m + 1 elements. So, for example, the number of elements in [0, rows) is obvious (i.e., rows - 0, or rows) but the number in [1, rows] is less so.
This behavioral difference between asymmetric and symmetric ranges is particularly evident in the case of empty ranges: If we use asymmetric ranges, we can express an empty range as [n, n), in contrast to [n, n-1] for symmetric ranges. The possibility that the end of a range could ever be less than the beginning can cause no end of trouble in designing programs.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Developing and Deploying Java Servlet Webapp</title>
      <link>https://robin-lee.github.io/blog/2016/08/developing-and-deploying-java-servlet-webapp/</link>
      <pubDate>Fri, 12 Aug 2016 16:23:07 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/08/developing-and-deploying-java-servlet-webapp/</guid>
      <description>

&lt;h2 id=&#34;developing&#34;&gt;Developing&lt;/h2&gt;

&lt;p&gt;You can find a few tutorials on how to create a basic (hello world) webapp with java servlets in eclipse so it will not be included here.
As always my experience differs from such tutorials. It is never smooth sailing. You always have to configure or troubleshoot something even if your setup is &lt;em&gt;exactly&lt;/em&gt; the same. The last time I did something with Servlets or JSP was in 2013 or 2014. I don&amp;rsquo;t think I have my notes from then.&lt;/p&gt;

&lt;p&gt;This time round I had to do some tweaking to get Eclipse to recognise the tomcat server installed on OSX (not the VM, thats working well). For some reason it didn&amp;rsquo;t recognize tomcat 8.5.*.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;You have to patch catalina.jar, as this is version number the WTP adapter looks at. It&#39;s a quite useless check, and the adapter should allow you to start the server anyway, but nobody has though of that yet.

For years and with every version of Tomcat this is always a problem.

To patch you can do the following:

cd [tomcat or tomee home]/lib
mkdir catalina
cd catalina/
unzip ../catalina.jar
vim org/apache/catalina/util/ServerInfo.properties
Make sure it looks like the following (the version numbers all need to start with 8.0):

server.info=Apache Tomcat/8.0.0
server.number=8.0.0
server.built=May 11 2016 21:49:07 UTC
Then:

jar uf ../catalina.jar org/apache/catalina/util/ServerInfo.properties
cd ..
rm -rf catalina
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/37024876/how-to-use-tomcat-8-5-x-and-tomee-7-x-with-eclipse&#34;&gt;stack link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once this was done, I could develop and test my webapp in Eclipse.&lt;/p&gt;

&lt;h2 id=&#34;deploying&#34;&gt;Deploying&lt;/h2&gt;

&lt;p&gt;To me, running the webapp in the IDE is not deploying. There were a few tutorials with misleading titles.&lt;/p&gt;

&lt;p&gt;I was told that to deploy an webapp is bascially copying a war archive into a directory for tomcat. To have a 2nd opinion, I found this &lt;a href=&#34;http://www.vogella.com/tutorials/EclipseWTP/article.html&#34;&gt;vogella tutorial&lt;/a&gt;. Vogella has been consistent in providing great tutorials to help you get started.&lt;/p&gt;

&lt;p&gt;In Eclipse, you just right click on the root package for your webapp and export as a &lt;code&gt;war archive&lt;/code&gt; and save it somewhere.&lt;/p&gt;

&lt;p&gt;To transfer the file to the VM:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp &amp;lt;filename&amp;gt;.war tomcatuser@192.168.56.101:/home/&amp;lt;vm user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And via ssh in &lt;code&gt;/opt/tomcat&lt;/code&gt; (assuming you set up tomcat here and service is called tomcat8):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp ~/&amp;lt;filename&amp;gt;.war webapps/
sudo service tomcat8 restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now going to &lt;code&gt;&amp;lt;url&amp;gt;:8080/&amp;lt;filename&amp;gt;/&amp;lt;classname&amp;gt;&lt;/code&gt; should load your webpage or whatever response you made.
You could change the URL by specifying configurations in a &lt;code&gt;web.xml&lt;/code&gt; but that will not be covered here&amp;hellip; for now?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tomcat Development Server</title>
      <link>https://robin-lee.github.io/blog/2016/08/tomcat-development-server/</link>
      <pubDate>Thu, 11 Aug 2016 23:13:48 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/08/tomcat-development-server/</guid>
      <description>

&lt;p&gt;I always wanted to learn some backend development seriously and finally I have the opportunity to do so. I have played around with server setup in the past but most of the information has been forgotten.&lt;/p&gt;

&lt;p&gt;This time round a development server will be setup in virtualbox using ubuntu server 14.04 LTS (support expires 2019). For 16.04 LTS, I think the &lt;code&gt;apt-get&lt;/code&gt; command is replace with &lt;code&gt;apt&lt;/code&gt; and there are many new changes&amp;hellip; To save some time and focus on learning backend development sticking with 14.04 LTS is the better choice.&lt;/p&gt;

&lt;p&gt;Technologies used are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apache2: Web layer, sits infront of tomcat&lt;/li&gt;
&lt;li&gt;MySQL: Relational database&lt;/li&gt;
&lt;li&gt;Tomcat: Java app server&lt;/li&gt;
&lt;li&gt;Adminer: Web tool to manage MySQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h2&gt;

&lt;p&gt;I installed an image of ubuntu server 14.04 LTS.
Then I had to configure the network setting so that I would be able to access the web server hosted on the VM.&lt;/p&gt;

&lt;p&gt;The steps were:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to preferences for VirtualBox.&lt;/li&gt;
&lt;li&gt;Networks &amp;gt; Host-only networks.&lt;/li&gt;
&lt;li&gt;Ensure there is an entry vboxnet0 (with whatever ip range you want).&lt;/li&gt;
&lt;li&gt;Add a new adapter under network settings &lt;strong&gt;for VM&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Set it to host-only.&lt;/li&gt;
&lt;li&gt;Start up VM and configure &lt;code&gt;/etc/network/interfaces&lt;/code&gt;. (VM and Vbox settings have no relation hence you have to configure the new adapter here too)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How to configure &lt;code&gt;/etc/network/interfaces&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Originally, there was only eth0. You have to add eth1 too. (Special thanks: Vitor)&lt;/p&gt;

&lt;p&gt;After changing the settings, you can reboot the system. Although&amp;hellip; It might be possible to do &lt;code&gt;sudo ifdown eth1&lt;/code&gt; and &lt;code&gt;sudo ifup eth1&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;apache2&#34;&gt;Apache2&lt;/h2&gt;

&lt;p&gt;This was easy to setup. It gets complicated if you  want to configure it for a production environment though. (Further reading to be done)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mysql&#34;&gt;MySQL&lt;/h2&gt;

&lt;p&gt;You could do &lt;code&gt;sudo apt-get install mysql-server&lt;/code&gt; and it will work fine. However, I wanted a newer version mysql 5.7 so I had to download a newer APT package from the MySQL APT repository and then run the commands below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i &amp;lt;mysql-apt-file&amp;gt;.deb
sudo apt-get update
sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://serverfault.com/questions/752063/how-can-i-install-mysql-5-7-9-to-ubuntu-14-04&#34;&gt;Serverfault mysql reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-14-04&#34;&gt;Digital ocean mysql reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;adminer&#34;&gt;Adminer&lt;/h2&gt;

&lt;p&gt;phpMyAdmin is a popular tool people use to view MySQL database instances and it is known to have many security flaws. Adminer is an alternative. I had to try a few times to set this up. For some reason I kept getting 404 errors. Eventually, it worked after I tried retarting from a clean slate 2-3 times. There might have been some miscofigured files lying around (not clean slate). Unfortunately, apt-get doesn&amp;rsquo;t give you the latest version.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install adminer
sudo ln -s /etc/adminer/apache.conf /etc/apache2/conf-available/adminer.conf
sudo a2enconf adminer.conf
sudo service apache2 reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://www.leaseweb.com/labs/2014/06/install-adminer-manually-ubuntu-14-04/&#34;&gt;Link for manual installation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tomcat&#34;&gt;Tomcat&lt;/h2&gt;

&lt;p&gt;Tomcat requires java. Hence, install java before installing tomcat. Next, it is good practice to run the server as another user (security) but this can be annoying to get right. If you are not too familiar with the linux system and do not have a large repertoire of commandline commands as well as not a deep/intermediate understanding of the commands it will be a challenge.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install default-jdk

sudo groupadd tomcat
sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat

wget &amp;lt;link to tomcat binary&amp;gt;
sudo mkdir /opt/tomcat
sudo tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1
cd /opt/tomcat

# We put the tomcat user as the owner of the folder of tomcat:
sudo chown -R tomcat:tomcat /opt/tomcat
# Users can not modify the configuration of tomcat:
sudo chmod -R g+r /opt/tomcat/conf
# Users can modify the other folders:
sudo chmod -R g+w /opt/tomcat/conf
sudo chmod -R g+w /opt/tomcat/logs
sudo chmod -R g+w /opt/tomcat/temp
sudo chmod -R g+w /opt/tomcat/webapps
sudo chmod -R g+w /opt/tomcat/work
# Activate the sticky-bit for new files keep permissions defined:
sudo chmod -R g+s /opt/tomcat/conf
sudo chmod -R g+s /opt/tomcat/logs
sudo chmod -R g+s /opt/tomcat/temp
sudo chmod -R g+s /opt/tomcat/webapps
sudo chmod -R g+s /opt/tomcat/work
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You might get a permission denied message when trying to &lt;code&gt;cd&lt;/code&gt; into logs or one of the folders&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -a -G tomcat &amp;lt;your username&amp;gt;
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;exit&lt;/code&gt; till you are logged out then relog for permission changes to take place. You need to be in the tomcat group to have access.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://superuser.com/questions/632618/best-practice-for-access-permission-to-users-for-apache-tomcat&#34;&gt;More on permissions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/opt&lt;/code&gt; is for third-party applications that don&amp;rsquo;t rely on any dependencies outside the scope of said package. &lt;code&gt;/usr/local&lt;/code&gt; is for packages installed on this machine outside the scope of the distribution package manager. &lt;a href=&#34;http://askubuntu.com/questions/34880/use-of-opt-and-usr-local-directories-in-the-context-of-a-pc&#34;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After all that you need to make a script that will run on startup.
The script will be placed in &lt;code&gt;/etc/init.d/&amp;lt;name&amp;gt;&lt;/code&gt;. &lt;code&gt;update-rc.d&lt;/code&gt; will be of help.
(So may commands to know)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tomcat8&lt;/code&gt; script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

### References:
### http://askubuntu.com/questions/223944/how-to-automatically-restart-tomcat7-on-system-reboots/224402
### http://superuser.com/questions/632618/best-practice-for-access-permission-to-users-for-apache-tomcat
###

### BEGIN INIT INFO
# Provides:        tomcat8
# Required-Start:  $network
# Required-Stop:   $network
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start/Stop Tomcat server
### END INIT INFO

JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
PATH=/sbin:/bin:/usr/sbin:/usr/bin

start() {
 sh /opt/tomcat/bin/startup.sh
}

stop() {
 sh /opt/tomcat/bin/shutdown.sh
}

case $1 in
  start|stop) $1;;
  restart) stop; start;;
  *) echo &amp;quot;Run as $0 &amp;lt;start|stop|restart&amp;gt;&amp;quot;; exit 1;;
esac
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Give the script permissions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod 755 /etc/init.d/tomcat8
sudo upate-rc.d tomcat8 defaults
sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use like &lt;code&gt;service tomcat8 &amp;lt;stop|start|restart&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you wish may use a fancier &lt;a href=&#34;https://gist.github.com/miglen/5590986&#34;&gt;script&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;testing-setup&#34;&gt;Testing setup&lt;/h2&gt;

&lt;p&gt;Default port for tomcat is 8080. Test &lt;code&gt;curl 127.0.0.1:8080&lt;/code&gt;. You should see the default tomcat webpage.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipconfig | grep addr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now get the ip for you virtual machine and see if you can access apache, adminer and tomcat from your host machine&amp;rsquo;s web browser.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ip address&amp;gt;
&amp;lt;ip address&amp;gt;/adminer
&amp;lt;ip address&amp;gt;:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Phew, that is done.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fundamentals: Sockets</title>
      <link>https://robin-lee.github.io/blog/2016/08/fundamentals-sockets/</link>
      <pubDate>Mon, 01 Aug 2016 11:59:12 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/08/fundamentals-sockets/</guid>
      <description>

&lt;h1 id=&#34;what-is-a-socket&#34;&gt;What is a socket?&lt;/h1&gt;

&lt;p&gt;A socket is a &lt;em&gt;tool&lt;/em&gt; that allows communication between two different processes on the same or different machines. To be more precise, it&amp;rsquo;s a way to talk to other computers using standard Unix file descriptors. In Unix, every I/O action is done by writing or reading a file descriptor. A file descriptor is just an integer associated with an open file and it can be a network connection, a text file, a terminal, or something else.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tutorialspoint.com/unix_sockets/what_is_socket.htm&#34;&gt;TutorialPoint&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;You hear talk of &amp;quot;sockets&amp;quot; all the time, and perhaps you are wondering just what they are exactly. Well, they&#39;re this: a way to speak to other programs using standard Unix file descriptors.

What?

Ok—you may have heard some Unix hacker state, &amp;quot;Jeez, everything in Unix is a file!&amp;quot; What that person may have been talking about is the fact that when Unix programs do any sort of I/O, they do it by reading or writing to a file descriptor. A file descriptor is simply an integer associated with an open file. But (and here&#39;s the catch), that file can be a network connection, a FIFO, a pipe, a terminal, a real on-the-disk file, or just about anything else. Everything in Unix is a file! So when you want to communicate with another program over the Internet you&#39;re gonna do it through a file descriptor, you&#39;d better believe it.

&amp;quot;Where do I get this file descriptor for network communication, Mr. Smarty-Pants?&amp;quot; is probably the last question on your mind right now, but I&#39;m going to answer it anyway: You make a call to the socket() system routine. It returns the socket descriptor, and you communicate through it using the specialized send() and recv() (man send, man recv) socket calls.

&amp;quot;But, hey!&amp;quot; you might be exclaiming right about now. &amp;quot;If it&#39;s a file descriptor, why in the name of Neptune can&#39;t I just use the normal read() and write() calls to communicate through the socket?&amp;quot; The short answer is, &amp;quot;You can!&amp;quot; The longer answer is, &amp;quot;You can, but send() and recv() offer much greater control over your data transmission.&amp;quot;

What next? How about this: there are all kinds of sockets. There are DARPA Internet addresses (Internet Sockets), path names on a local node (Unix Sockets), CCITT X.25 addresses (X.25 Sockets that you can safely ignore), and probably many others depending on which Unix flavor you run. This document deals only with the first: Internet Sockets.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I really like Beej&amp;rsquo;s writing style.&lt;/p&gt;

&lt;p&gt;Reference:
&lt;a href=&#34;http://beej.us/guide/bgnet/output/html/multipage/theory.html&#34;&gt;Beej&amp;rsquo;s Guide to Network Programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here, it can be seen that when talking about sockets it is important to be clear on the context. What kind of socket are we talking about?
For this post, we will continue with Intenet Sockets. I was in the midst of messing with NodeJS when I just had to get sockets &lt;em&gt;right&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;internet-sockets&#34;&gt;Internet sockets&lt;/h1&gt;

&lt;p&gt;Programmatically, it can be said that an internet socket consists of 5 things (see tuple):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{protocol, local address, local port, remote address, remote port}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/a/11782471&#34;&gt;comment by EJP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are 2 types:
- Stream sockets (SOCK_STREAM): reliable two-way connected communication streams
- Datagram sockets (SOCK_DGRAM): connectionless and data may or may not arrive&lt;/p&gt;

&lt;p&gt;Stream sockets achieve this reliability by using a protocol: Transmission Control Protocol (TCP; RFC 793). Usually you hear of TCP/IP. IP is Internet Protocol (RFC 791) which is responsible for routing not data integrity.&lt;/p&gt;

&lt;p&gt;Datagram sockets use a protocol called User Datagram Protocol (UDP; RFC 768). For Datagram sockets you don&amp;rsquo;t have to maintain an open connection. Stream sockets you do.&lt;/p&gt;

&lt;h1 id=&#34;socket-programming&#34;&gt;Socket Programming&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cs.dartmouth.edu/~campbell/cs50/socketprogramming.html&#34;&gt;dartmouth cs50&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gradle and gradle init</title>
      <link>https://robin-lee.github.io/blog/2016/07/gradle-and-gradle-init/</link>
      <pubDate>Wed, 27 Jul 2016 10:56:29 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/gradle-and-gradle-init/</guid>
      <description>

&lt;h1 id=&#34;what-is-gradle&#34;&gt;What is gradle?&lt;/h1&gt;

&lt;p&gt;Gradle is an open source &lt;strong&gt;build automation system&lt;/strong&gt; that builds upon the concepts of Apache Ant and Apache Maven and introduces a Groovy-based domain-specific language (DSL) instead of the XML form used by Apache Maven of declaring the project configuration.
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Gradle&#34;&gt;wikipedia&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Here are more build tools from a stackoverflow post linked later:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apache Ant &amp;amp; Apache Maven - Java&lt;/li&gt;
&lt;li&gt;sbt (Simple Build Tool) - for Scala&lt;/li&gt;
&lt;li&gt;A-A-P - Python based build tool&lt;/li&gt;
&lt;li&gt;Rake (Apache Builder) - Ruby&lt;/li&gt;
&lt;li&gt;Leiningen for Clojure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is gulpjs and gruntjs for Javascript too.&lt;/p&gt;

&lt;h1 id=&#34;gradle-and-android-studio&#34;&gt;Gradle and Android Studio&lt;/h1&gt;

&lt;p&gt;You used to use Eclipse to develop for Android. Later, the main IDE changed to Android Studio and together with it came gradle. Why?&lt;/p&gt;

&lt;p&gt;I would say build systems stay true to the way of using commandline programs to achieve some task. This stackoverflow &lt;a href=&#34;http://stackoverflow.com/questions/16754643/what-is-gradle-in-android-studio&#34;&gt;post&lt;/a&gt; explains it nicely. Basically, it was difficult for you figure out how to build an apk without Eclipse. Google decided to make an Android plugin for gradle, thus, now its easier to make apks without an IDE. Furthermore, you can customize the way you want your package built. If you like to have resources put in a non-conventional folder, go ahead, just update the build script.&lt;/p&gt;

&lt;h1 id=&#34;gradle-init&#34;&gt;Gradle init&lt;/h1&gt;

&lt;p&gt;My motivation to use gradle came from the need to test some code or libraries without starting a fully fledged IDE. I discovered a useful plugin gradle has called the &lt;code&gt;Build Init Plugin&lt;/code&gt;. (&lt;a href=&#34;https://docs.gradle.org/current/userguide/build_init_plugin.html&#34;&gt;link&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gradle init --type java-library
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With then one command I have a basic Java project setup and I can use something like Sublime Text and get going. As a bonus JUnit is included by default.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Uncle Bob Said</title>
      <link>https://robin-lee.github.io/blog/2016/07/uncle-bob-said/</link>
      <pubDate>Sun, 24 Jul 2016 22:10:37 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/uncle-bob-said/</guid>
      <description>

&lt;h1 id=&#34;inspirational-quotes&#34;&gt;Inspirational quotes&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You dont go fast by writing crap”&lt;/p&gt;

&lt;p&gt;&amp;ldquo;You want to go fast, you do a good job”&lt;/p&gt;

&lt;p&gt;“Move deliberately, instead of rapidly&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Agile Software Development</title>
      <link>https://robin-lee.github.io/blog/2016/07/agile-software-development/</link>
      <pubDate>Sat, 23 Jul 2016 16:29:59 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/agile-software-development/</guid>
      <description>

&lt;h1 id=&#34;what-is-agile-software-development&#34;&gt;What is Agile Software Development?&lt;/h1&gt;

&lt;p&gt;It refers to adopting a set of practices or principles while developing software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In early 2001, the Agile Alliance met to outine the values and principles that would allow software teams work together and respond to change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Agile Software Development, Principles, Patterns and Practices.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;things-that-got-my-attention&#34;&gt;Things that got my attention&lt;/h1&gt;

&lt;p&gt;1.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agiles processes promote sustainable development. The sponsors, developers and users should be able to maintain constant pace indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An agile project is not run like a 50-yard dash; it is run like a marathon. They run at a fast, sustainable pace. Running too fast often leads to burnout, shortcuts and debacle. &amp;hellip; A team is not allowed to work overtime. The only exception is the last week in a release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Splitting, Spiking and Velocity. Any story too big should be split in stories that aren&amp;rsquo;t too big. After splitting, it should be reestiamted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Velocity is something like &amp;ldquo;2 days per story point&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-&amp;gt; Users can securely transfer money into, out of, and between their accounts.

becomes

-&amp;gt; Users can login
-&amp;gt; Users can logout
-&amp;gt; Users can deposit money into their account
-&amp;gt; Users can withdraw money from their account
-&amp;gt; Users can transfer money from their account to another account
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Intentional programming. You state your intent in a test before implementing it, making your intent as simple and readable as possible. The act of writing tests first is an act of discerning between design decisions. WumpusGame example: Integers instead of room object or game world?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;White box test: A test that knows and depends on its internal structure. (unit)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Black box test: A test that does&lt;/em&gt; &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;know or depend on its internal structure. (acceptance)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Always practice refactoring for every module you write and every module you maintain.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>SOLID Principles</title>
      <link>https://robin-lee.github.io/blog/2016/07/solid-principles/</link>
      <pubDate>Sat, 23 Jul 2016 14:46:47 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/solid-principles/</guid>
      <description>

&lt;p&gt;A set of principles to design or write &lt;strong&gt;classes&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;single-responsibility-principle&#34;&gt;Single Responsibility Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A class should have one, and only one, reason to change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;open-closed-principle&#34;&gt;Open - Closed Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;You should be able to extend a classes behavior, without modifying it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;liskov-substitution-principle&#34;&gt;Liskov Substitution Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Derived classes must be substitutable for their base classes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;interface-segregation-principle&#34;&gt;Interface Segregation Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Make fine grained interfaces that are client specific.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;dependency-inversion-principle&#34;&gt;Dependency Inversion Principle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Depend on abstractions, not on concretions.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Gson Custom Deserializer</title>
      <link>https://robin-lee.github.io/blog/2016/07/gson-custom-deserializer/</link>
      <pubDate>Tue, 12 Jul 2016 21:51:16 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/gson-custom-deserializer/</guid>
      <description>&lt;p&gt;When you develop an application, usually you will have to consume an API Service which might return some JSON data.
You might not need all values from the JSON data.&lt;/p&gt;

&lt;p&gt;The question is how do you process such data the &lt;em&gt;right&lt;/em&gt; way?&lt;/p&gt;

&lt;p&gt;Typically, you will retrieve the data using a HTTP client and then pass it on to a Object Relational Mapper.
In my experience APIs return data based on models crafted for the database, however, for client side applications the model
you design might be different from what the API returns you (due to application needs/ease of development). Hence, you need to extract part of it, transform it or map it differently.&lt;/p&gt;

&lt;p&gt;If you happen to use GSON and retrofit 2&amp;hellip; Perhaps this example will help you.&lt;/p&gt;

&lt;p&gt;Sample json data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;date&amp;quot;: &amp;quot;2016-01-01T21:23:00&amp;quot;,
  &amp;quot;places&amp;quot;: [
    {
      &amp;quot;id&amp;quot;: 1,
      &amp;quot;amount&amp;quot;: 25
    },
    {
      &amp;quot;id&amp;quot;: 2,
      &amp;quot;amount&amp;quot;: 59
    },
    {
      &amp;quot;id&amp;quot;: 3,
      &amp;quot;amount&amp;quot;: 28
    },
    {
      &amp;quot;id&amp;quot;: 4,
      &amp;quot;amount&amp;quot;: 11
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets say you just want the &amp;ldquo;list&amp;rdquo; of places.&lt;/p&gt;

&lt;p&gt;First define a model for each &amp;ldquo;Place&amp;rdquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
private int id;
private int amount;

//Constructors, getters and setters
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Define a custom deserializer for GSON with a main method for testing (or you could setup JUnit).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CustomPlaceDeserializer&amp;lt;T&amp;gt; implements JsonDeserializer&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; {

    public List&amp;lt;T&amp;gt; deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext context)
            throws JsonParseException {

        JsonElement results = jsonElement.getAsJsonObject().get(&amp;quot;places&amp;quot;);

        return new Gson().fromJson(results, type);
    }

    public static void main(String[] args) throws Exception {

        //

        // Configure Gson
        GsonBuilder gsonBuilder = new GsonBuilder();
        Type listType = new TypeToken&amp;lt;ArrayList&amp;lt;Place&amp;gt;&amp;gt;(){}.getType();
        gsonBuilder.registerTypeAdapter(listType, new CustomPlaceDeserializer&amp;lt;Place&amp;gt;());
        Gson gson = gsonBuilder.create();

        // The JSON data
        String jsonstring = &amp;quot;replace this with sample json string&amp;quot;;

        // Parse JSON to Java
        List&amp;lt;Place&amp;gt; places = gson.fromJson(jsonstring, listType);
        System.out.println(places.size());
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are using retrofit 2, it might look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Gson customGson =
        new GsonBuilder()
                .registerTypeAdapter(listType, new CustomPlaceDeserializer&amp;lt;Place&amp;gt;())
                .create();
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://robin-lee.github.io/about/</link>
      <pubDate>Sun, 10 Jul 2016 15:04:30 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/about/</guid>
      <description>&lt;p&gt;Robin is an undergraduate at SUTD.&lt;/p&gt;

&lt;p&gt;He likes reading epic fantasy, translated light novels and trying new technologies*.&lt;/p&gt;

&lt;p&gt;Here he writes about his adventures with random things as well as shares his thoughts on various topics.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://robin-lee.github.io/blog/2016/07/hello-world/</link>
      <pubDate>Sun, 10 Jul 2016 14:29:34 +0200</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/07/hello-world/</guid>
      <description>&lt;p&gt;Whoopee! Hugo, with the cocoa theme!&lt;/p&gt;

&lt;p&gt;Furthermore, some old posts have been shifted over from pelican!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Check out how to use hugo here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virtual Box Shared Folder</title>
      <link>https://robin-lee.github.io/blog/2016/02/virtual-box-shared-folder/</link>
      <pubDate>Sat, 06 Feb 2016 21:41:18 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/02/virtual-box-shared-folder/</guid>
      <description>&lt;p&gt;For some projects I need to share files between my virtual machine and my host machine. VirtualBox allows for shared folders between the VM and the host after install Guest Additions. However, there is always a bit of configuration involved.&lt;/p&gt;

&lt;p&gt;I installed Ubuntu 14.04 LTS and then installed Guest Additions. After I added a shared folder in the settings, I discovered that I did not have permission to access the folder. According to VirtualBox&amp;rsquo;s &lt;a href=&#34;https://www.virtualbox.org/manual/ch04.html#sf_mount_auto&#34;&gt;documentation&lt;/a&gt; you need to add guest users to the vboxsf group. I tend to forget the command to do so as I do not need to change user properties frequency.&lt;/p&gt;

&lt;p&gt;If you happen to need the command here it is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language-bash&#34;&gt;sudo usermod -aG vboxsf &amp;lt;your username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Forcing Display Edid</title>
      <link>https://robin-lee.github.io/blog/2016/02/forcing-display-edid/</link>
      <pubDate>Fri, 05 Feb 2016 22:02:00 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2016/02/forcing-display-edid/</guid>
      <description>&lt;p&gt;I bought a 2 port VGA Switcher off Taobao so that I could switch my main display between my desktop and laptop. However, when I connected my Macbook through the VGA adapter to the VGA Switcher my screen was not appearing correctly. It was shifted off screen to the right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://robin-lee.github.io/images/mtviki-vga-switch.jpg&#34; alt=&#34;VGA Switcher&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is the 2 port VGA Switcher I bought off Taobao. It is a nice compact device with tacty buttons you can press to switch the the video input.&lt;/p&gt;

&lt;p&gt;If I connect it up like Macbook - VGA Adapter - VGA Cable - Display, it works fine. However, the setup I need is Macbook - VGA Adapter - VGA Cable - VGA Switcher - Display. When connected up in this manner, the output from my Macbook is cutoff and shifted to the right. Faced with this problem I contemplated getting another KVM Switch that is known to work with Macbooks.&lt;/p&gt;

&lt;p&gt;Knowing that it would still take at least 2-3 weeks to get a KVM Switch purchased from Amazon to my doorstep, I looked for software or configuration based solutions. The SwitchResX plugin was able to get the full HD resolution to show but that produced the cutoff issue. Smaller resolutions from 1400x1050 downwards was working fine but it wasn&amp;rsquo;t HDPI and it is such a waste for a 23 inch screen.&lt;/p&gt;

&lt;p&gt;I observed that the display was being detected as a generic VGA/SVGA display with Vendor as &amp;ldquo;unkn - 756E6B6E&amp;rdquo; and Product as &amp;ldquo;717&amp;rdquo;. So I made a guess that my laptop was unable to tell what device we are being hooked up to through the VGA cable. When it comes to identifying something we usually do it through IDs. There had to be some file or ID that could be spoofed right?&lt;/p&gt;

&lt;p&gt;After Googling a bit it seems like other people have had the similar problems. There were a number of threads where people indicated failure in producing the right output on an external display connected to their Macbook. Changing some files relating to EDID solved their problem. According to wikipedia: &lt;code&gt;Extended display identification data (EDID) is a data structure provided by a digital display to describe its capabilities to a video source (e.g. graphics card or set-top box). It is what enables a modern personal computer to know what kinds of monitors are connected to it.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Going to the folder &lt;code&gt;/DisplayVendorID-756e6b6e&lt;/code&gt;, I had to replace &lt;code&gt;DisplayProductID-717&lt;/code&gt; with a customized configuration.
It is better explained &lt;a href=&#34;http://www.insanelymac.com/forum/topic/208410-fixing-scrambledstretched-or-wrong-resolution-laptop-display-problems/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Regex</title>
      <link>https://robin-lee.github.io/blog/2015/09/learning-regex/</link>
      <pubDate>Tue, 15 Sep 2015 23:21:45 +0800</pubDate>
      
      <guid>https://robin-lee.github.io/blog/2015/09/learning-regex/</guid>
      <description>&lt;p&gt;I think regular expressions are essential when it comes to extracting data from a source.&lt;/p&gt;

&lt;p&gt;For example if you wanted the names of all the files in a folder without the extensio, using a regular expression could make the process easier and code more concise.&lt;/p&gt;

&lt;p&gt;The difficulty is finding the material to practice on even with a cheatsheet for regex.&lt;/p&gt;

&lt;p&gt;I found this site called &lt;a href=&#34;http://regexone.com/&#34;&gt;regexone&lt;/a&gt; and I felt the tutorial reflected certain real life situations. Not only did it teach me about the symbols it did so by sharing real life examples(where you might use a regular expression). Such as for checking for email validity or telephone number validity. Do check it out!&lt;/p&gt;

&lt;p&gt;When crafting a regular expression for use you will definitely need to test it first, so here is an online tool you might want to use: &lt;a href=&#34;https://regex101.com/&#34;&gt;regex101&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Brief recap of what I went through&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;(hat) the hat character can be used to exclude or declare the start of a regular expression.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[abc]&lt;/code&gt; square brackets mean that it is a character set. In this case only a,b, or c are valid.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[^abc]&lt;/code&gt; this &lt;em&gt;inverts&lt;/em&gt; the logic in the previous point. Not a, b, nor c. Exclude a, b, and c.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[a-z]|[0-9]&lt;/code&gt; a to z or 0-9.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; end of regular expression&lt;/li&gt;
&lt;li&gt;&lt;code&gt;()&lt;/code&gt; capture group, can be nested. Jan 1988. &lt;code&gt;(\w+\s(\d+))&lt;/code&gt; gives &lt;code&gt;Jan 1988&lt;/code&gt; &lt;code&gt;1988&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; means any character. &lt;code&gt;\.&lt;/code&gt; with backslash means period.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; means ONE or many repetitions. &lt;code&gt;*&lt;/code&gt; ZERO or many repetitions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\s&lt;/code&gt; any white space character &lt;code&gt;\t&lt;/code&gt;, , &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n}&lt;/code&gt;, &lt;code&gt;{a,b}&lt;/code&gt;. n repetitions. a to b repetitions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w&lt;/code&gt; means &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; means [0-9]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab?c&lt;/code&gt; means b is an optional. &lt;code&gt;abc&lt;/code&gt; and &lt;code&gt;ac&lt;/code&gt; are valid.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w+\b&lt;/code&gt; is useful for getting entire words. boundary between word and non-word character.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\W+$&lt;/code&gt; would match any non-alphanumeric character up to the end of the line. Eg. &lt;code&gt;&amp;amp;$#*@!.&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>